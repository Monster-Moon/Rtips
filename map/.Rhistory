lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text())
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
1, '/',
20200617, '//',
11110530)
url
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
24, '/',
20200617, '/',
0, '/',
11110530)
url
lines = readLines(url)
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text())
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
24, '/',
20200617, '/',
0, '//',
11110530)
lines = readLines(url)
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text())
rvest::read_html(url)
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
24, '/',
20200617, '/',
0, '/',
11110530)
url
lines = readLines(url)
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text())
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
24, '/',
20200617, '/',
0, '/',
1110530)
url
lines = readLines(url)
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text())
url
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
24, '/',
20200617, '/',
0, '/',
11110530)
lines = readLines(url)
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text())
head(sdng_df)
head(mapp)
mapp$ADM_CD %in% sdng_df$H_DNG_CD
mapp$ADM_CD %in% sdng_df$H_SDNG_CD
date
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
1, '/',
20200617, '/',
00, '/',
11110530)
url
time
date
date_val = '20210610'
date_val = '20210610'
tz_val = '01'
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
1, '/',
date_val, '/',
tz_val, '/',
11110530)
url
head(sdng_df$H_SDNG_CD)
head(sdng_df$H_DNG_CD)
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
1, '/',
date_val, '/',
tz_val, '/')
url
tmp_url = paste0(url, cd)
cd = 11110530
tmp_url = paste0(url, cd)
tmp_url
lines = readLines(url)
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text())
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>% do.call('c', .)
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text())
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>% do.call('c', .)
tmp_url = paste0(url, cd)
tmp_lines = readLines(tmp_url)
lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>% do.call('c', .)
get_data_fun = function(cd, url)
{
tmp_url = paste0(url, cd)
tmp_lines = readLines(tmp_url)
return_val = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>% do.call('c', .)
return(return_val)
}
lapply(sdng_df$H_DNG_CD[1], get_data_fun, url = url)
lapply(sdng_df$H_DNG_CD[1:2], get_data_fun, url = url)
data_list = lapply(sdng_df$H_DNG_CD, get_data_fun, url = url)
df = do.call('rbind', data_list)
head(df)
df = do.call('rbind', data_list) %>% data.frame()
head(df)
head(sdng_df)
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
head(df)
df %>% left_join(sdng_df, by = 'H_DNG_CD')
str(df)
str(sdng_df)
sdng_df %>%
mutate(H_SDNG_CD = as.character(H_SDNG_CD),
H_DNG_CD = as.character(H_DNG_CD))
sdng_df = sdng_df %>%
mutate(H_SDNG_CD = as.character(H_SDNG_CD),
H_DNG_CD = as.character(H_DNG_CD))
api_key = '57527a4c586b656e36334256686556'
date_val = '20210610'
tz_val = '01'
df %>% left_join(sdng_df, by = 'H_DNG_CD')
tmp_df = df %>% left_join(sdng_df, by = 'H_DNG_CD')
tmp_df
head(mapp)
head(tmp_df)
mapp %>% left_join(tmp_df, by = c('ADM_CD' = 'H_DNG_CD'))
mapp$ADM_CD %in% tmp_df$H_DNG_CD
mapp$ADM_CD %in% tmp_df$H_SDNG_CD
mapp %>% left_join(tmp_df, by = c('ADM_CD' = 'H_SDNG_CD'))
vis_df = mapp %>% left_join(tmp_df, by = c('ADM_CD' = 'H_SDNG_CD'))
head(vis_df)
ggplot(vis_df) + geom_sf(aes(fill = TOT))
ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT)))
ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT)), color = 'white', alpha = 1)
ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT)), size = 0.5)
ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c(begin = 0.1) #ggplot으로 그림을 그리는 부분입니다.
ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c(begin = 0.1) +
geom_sf_label(aes(label = H_DNG_NM),label.padding =unit(0.1,'line'),label.size=0.25) #ggplot으로 그림을 그리는 부분입니다. 주석을 다는 부분입니다.
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
1, '/',
date_val, '/',
tz_val, '/')
url
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
url
tmp_lines = readLines(url)
return_val = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>% do.call('c', .)
head(return_val)
return_val = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>% do.call('rbind', .)
head(return_val)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>% do.call('cbind', .)
return_val = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>% do.call('cbind', .)
head(retrun_val)
head(return_val)
df = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>%
do.call('cbind', .) %>%
data.frame()
head(df)
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
df %>% left_join(sdng_df, by = 'H_DNG_CD')
tmp_df = df %>% left_join(sdng_df, by = 'H_DNG_CD')
tmp_df
vis_df = mapp %>% left_join(tmp_df, by = c('ADM_CD' = 'H_SDNG_CD'))
head(vis_df)
ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c(begin = 0.1)
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c(begin = 0.1)
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c()
g
df = get_df_fun(date_val = date_val, tz_val = tz_vzl, sdng_df = sdng_df, api_key, api_key)
get_df_fun = function(date_val, tz_val, sdng_df = sdng_df, api_key = api_key)
{
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
tmp_lines = readLines(url)
df = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>%
do.call('cbind', .) %>%
data.frame()
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
return(df %>% left_join(sdng_df, by = 'H_DNG_CD'))
}
df = get_df_fun(date_val = date_val, tz_val = tz_vzl, sdng_df = sdng_df, api_key, api_key)
df = get_df_fun(date_val = date_val, tz_val = tz_vzl, sdng_df = sdng_df, api_key = api_key)
df = get_df_fun(date_val = date_val, tz_val = tz_val, sdng_df = sdng_df, api_key = api_key)
tmp_df = df %>% left_join(sdng_df, by = 'H_DNG_CD')
vis_df = mapp %>% left_join(tmp_df, by = c('ADM_CD' = 'H_SDNG_CD'))
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c()
tmp_df = df %>% left_join(sdng_df, by = 'H_DNG_CD')
vis_df = mapp %>% left_join(tmp_df, by = c('ADM_CD' = 'H_SDNG_CD'))
mapp
tmp_df
head(df)
vis_df = mapp %>% left_join(df, by = c('ADM_CD' = 'H_SDNG_CD'))
vis_df
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c() + labs(fill = "생활인구")
g
path = getwd()
paste0(path, '/spopvis_', date_val, tz_val, '.jpg')
ggsave(g, paste0(path, '/spopvis_', date_val, tz_val, '.jpg'))
?ggsave
ggsave(paste0(path, '/spopvis_', date_val, tz_val, '.jpg'), g, )
ggsave(paste0(path, '/spopvis_', date_val, tz_val, '.jpg'), g)
api_key = '57527a4c586b656e36334256686556'
date_val = '20210610'
tz_val = '01'
date_val = '20210610'
tz_val = '12'
vis_fun(mapp, date_val, tz_val)
get_df_fun = function(date_val, tz_val, sdng_df = sdng_df, api_key = api_key)
{
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
tmp_lines = readLines(url)
df = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>%
do.call('cbind', .) %>%
data.frame()
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
return(df %>% left_join(sdng_df, by = 'H_DNG_CD'))
}
vis_fun = function(mapp, date_val, tz_val, path = getwd(), sdng_df = sdng_df, api_key = api_key)
{
df = get_df_fun(date_val = date_val, tz_val = tz_val, sdng_df = sdng_df, api_key = api_key)
vis_df = mapp %>% left_join(df, by = c('ADM_CD' = 'H_SDNG_CD'))
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c() + labs(fill = "생활인구")
ggsave(paste0(path, '/spopvis_', date_val, tz_val, '.jpg'), g)
}
vis_fun(mapp, date_val, tz_val)
df = get_df_fun(date_val = date_val, tz_val = tz_val, sdng_df = sdng_df, api_key = api_key)
get_df_fun = function(date_val, tz_val, sdng_df, api_key)
{
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
tmp_lines = readLines(url)
df = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>%
do.call('cbind', .) %>%
data.frame()
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
return(df %>% left_join(sdng_df, by = 'H_DNG_CD'))
}
vis_fun = function(mapp, date_val, tz_val, path = getwd(), sdng_df = sdng_df, api_key = api_key)
{
df = get_df_fun(date_val = date_val, tz_val = tz_val, sdng_df = sdng_df, api_key = api_key)
vis_df = mapp %>% left_join(df, by = c('ADM_CD' = 'H_SDNG_CD'))
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c() + labs(fill = "생활인구")
ggsave(paste0(path, '/spopvis_', date_val, tz_val, '.jpg'), g)
}
api_key = '57527a4c586b656e36334256686556'
date_val = '20210610'
tz_val = '12'
vis_fun(mapp, date_val, tz_val)
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
tmp_lines = readLines(url)
df = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>%
do.call('cbind', .) %>%
data.frame()
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
get_df_fun(date_val = date_val, tz_val = tz_val, sdng_df = sdng_df, api_key = api_key)
rm(list = ls())
gc(reset = T)
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(data.table)) install.packages('data.table'); require(data.table)
if(!require(ggplot2)) install.packages('ggplot2'); require(ggplot2)
if(!require(sf)) install.packages('sf'); require(sf)
if(!require(httr)) install.packages('httr'); require(httr)
if(!require(rvest)) install.packages('rvest'); require(rvest)
setwd('Documents/GitHub/Rtips/map/')
# if(!require(tidyverse)) install.packages(''); require()
# if(!require(xlsx)) install.packages(''); require()
# if(!require(ggthemes)) install.packages(''); require()
# if(!require(gifski)) install.packages(''); require()
# if(!require(rayshader)) install.packages(''); require()
#----  MAC ggplot2 한글 깨짐 방지 ----#
if(!require(extrafont)) install.packages('extrafont'); require(extrafont)
theme_set(theme_gray(base_family='NanumGothic'))
#-------------------------------------#
#### Visualization .SHP file ####
# link: https://data.seoul.go.kr/dataVisual/seoul/seoulLivingPopulation.do
mapp = st_read("행정구역.shp")
head(mapp)
p = ggplot(mapp) +
geom_sf(aes(fill = SIGUNGU_NM)) ## 서울시 지도, 자치구별 색상 다르게
p
#### 유동인구 API ####
# link: http://data.seoul.go.kr/dataList/OA-14991/S/1/datasetView.do
sdng_df = fread('sdng_cd.csv') # 행정구별 코드 정보 http://data.seoul.go.kr/dataVisual/seoul/seoulLivingPopulation.do
sdng_df = sdng_df %>%
mutate(H_SDNG_CD = as.character(H_SDNG_CD),
H_DNG_CD = as.character(H_DNG_CD))
get_df_fun = function(date_val, tz_val, sdng_df, api_key)
{
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
tmp_lines = readLines(url)
df = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>%
do.call('cbind', .) %>%
data.frame()
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
return(df %>% left_join(sdng_df, by = 'H_DNG_CD'))
}
vis_fun = function(mapp, date_val, tz_val, path = getwd(), sdng_df = sdng_df, api_key = api_key)
{
df = get_df_fun(date_val = date_val, tz_val = tz_val, sdng_df = sdng_df, api_key = api_key)
vis_df = mapp %>% left_join(df, by = c('ADM_CD' = 'H_SDNG_CD'))
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c() + labs(fill = "생활인구")
ggsave(paste0(path, '/spopvis_', date_val, tz_val, '.jpg'), g)
}
api_key = '57527a4c586b656e36334256686556'
date_val = '20210610'
tz_val = '12'
vis_fun(mapp, date_val, tz_val)
get_df_fun = function(date_val_, tz_val_, sdng_df_, api_key_)
{
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
tmp_lines = readLines(url)
df = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>%
do.call('cbind', .) %>%
data.frame()
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
return(df %>% left_join(sdng_df, by = 'H_DNG_CD'))
}
vis_fun = function(mapp, date_val, tz_val, path = getwd(), sdng_df = sdng_df, api_key = api_key)
{
df = get_df_fun(date_val_ = date_val, tz_val_ = tz_val, sdng_df_ = sdng_df, api_key_ = api_key)
vis_df = mapp %>% left_join(df, by = c('ADM_CD' = 'H_SDNG_CD'))
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c() + labs(fill = "생활인구")
ggsave(paste0(path, '/spopvis_', date_val, tz_val, '.jpg'), g)
}
api_key = '57527a4c586b656e36334256686556'
date_val = '20210610'
tz_val = '12'
vis_fun(mapp, date_val, tz_val)
rm(list = ls())
gc(reset = T)
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(data.table)) install.packages('data.table'); require(data.table)
if(!require(ggplot2)) install.packages('ggplot2'); require(ggplot2)
if(!require(sf)) install.packages('sf'); require(sf)
if(!require(httr)) install.packages('httr'); require(httr)
if(!require(rvest)) install.packages('rvest'); require(rvest)
setwd('Documents/GitHub/Rtips/map/')
if(!require(extrafont)) install.packages('extrafont'); require(extrafont)
theme_set(theme_gray(base_family='NanumGothic'))
setwd('Documents/GitHub/Rtips/map/')
setwd('/Documents/GitHub/Rtips/map/')
getwd()
setwd('/Users/moon/Documents/GitHub/Rtips/map/')
rm(list = ls())
gc(reset = T)
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(data.table)) install.packages('data.table'); require(data.table)
if(!require(ggplot2)) install.packages('ggplot2'); require(ggplot2)
if(!require(sf)) install.packages('sf'); require(sf)
if(!require(httr)) install.packages('httr'); require(httr)
if(!require(rvest)) install.packages('rvest'); require(rvest)
setwd('/Users/moon/Documents/GitHub/Rtips/map/')
if(!require(extrafont)) install.packages('extrafont'); require(extrafont)
theme_set(theme_gray(base_family='NanumGothic'))
mapp = st_read("행정구역.shp")
head(mapp)
p = ggplot(mapp) +
geom_sf(aes(fill = SIGUNGU_NM)) ## 서울시 지도, 자치구별 색상 다르게
p
p = ggplot(mapp) +
geom_sf(aes(fill = SIGUNGU_NM), borders = 'white') ## 서울시 지도, 자치구별 색상 다르게
p = ggplot(mapp) +
geom_sf(aes(fill = SIGUNGU_NM, colour = 'white')) ## 서울시 지도, 자치구별 색상 다르게
p
p = ggplot(mapp) +
geom_sf(aes(fill = SIGUNGU_NM), colour = 'white') ## 서울시 지도, 자치구별 색상 다르게
p
sdng_df = fread('sdng_cd.csv')
sdng_df = sdng_df %>%
mutate(H_SDNG_CD = as.character(H_SDNG_CD),
H_DNG_CD = as.character(H_DNG_CD))
#### 유동인구 API ####
# link: http://data.seoul.go.kr/dataList/OA-14991/S/1/datasetView.do
get_df_fun = function(date_val_, tz_val_, sdng_df_, api_key_)
{
url = paste0('http://openapi.seoul.go.kr:8088/', api_key,
'/xml/SPOP_LOCAL_RESD_DONG/',
1, '/',
500, '/',
date_val, '/',
tz_val, '/')
tmp_lines = readLines(url)
df = lapply(c('stdr_de_id', 'tmzon_pd_se', 'adstrd_code_se', 'tot_lvpop_co'), function(x)
read_html(paste0(tmp_lines, collapse = '')) %>%
html_nodes('body row') %>% html_nodes(x) %>% html_text()) %>%
do.call('cbind', .) %>%
data.frame()
colnames(df) = c('date', 'tz', 'H_DNG_CD', 'TOT')
return(df %>% left_join(sdng_df, by = 'H_DNG_CD'))
}
vis_fun = function(mapp, date_val, tz_val, path = getwd(), sdng_df = sdng_df, api_key = api_key)
{
df = get_df_fun(date_val_ = date_val, tz_val_ = tz_val, sdng_df_ = sdng_df, api_key_ = api_key)
vis_df = mapp %>% left_join(df, by = c('ADM_CD' = 'H_SDNG_CD'))
g = ggplot(vis_df) + geom_sf(aes(fill = as.numeric(TOT))) +
scale_fill_viridis_c() + labs(fill = "생활인구")
ggsave(paste0(path, '/spopvis_', date_val, tz_val, '.jpg'), g)
}
api_key = '57527a4c586b656e36334256686556'
date_val = '20210610'
tz_val = '12'
vis_fun(mapp, date_val, tz_val)
